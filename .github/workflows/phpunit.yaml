name: Run PHPUnit

on: [push, pull_request]

# 指定したバージョンのPHPや拡張をセットアップするGitHub Action
# https://github.com/shivammathur/setup-php

# 参考
# * PHPUnit
# https://github.com/sebastianbergmann/phpunit/blob/master/.github/workflows/ci.yml
# * Predis
# https://github.com/predis/predis/blob/main/.github/workflows/tests.yml
# * Symfony
# https://github.com/symfony/symfony/blob/5.x/.github/workflows/tests.yml

jobs:
  phpunit:
    name: Tests
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
      memcached:
        image: memcached:1.6.5
        ports:
          - 11211:11211
      # https://docs.github.com/ja/free-pro-team@latest/actions/guides/creating-postgresql-service-containers
      postgres:
        image: postgres:13-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: sandbox_user
          POSTGRES_PASSWORD: sandbox_password
          POSTGRES_DB: sandbox_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      # * DynamoDB Local Usage Notes - Amazon DynamoDB
      # https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.UsageNotes.html
      # * Github Action内でDynamoDB Localを使用する
      # https://qiita.com/sayama0402/items/014d4a325d04e54485b5
      # -> 上記のActionだと、stepsの中でdynamodb-localのコンテナを立てることになる.
      #    本来は、サービスコンテナとして立てる方が正しいと思うので、上記のActionは使わない.
      dynamodb:
        image: amazon/dynamodb-local:latest
        ports:
          - 8000:8000
        # CMDを上書きして -sharedDb を指定したいが、現時点ではサービスコンテナのCMDを上書きすることができない
        # (ENTRYPOINTは `options` でできる)
        # options: >-
        #   --entrypoint foobar # ENTRYPOINTを上書きする場合
    strategy:
      matrix:
        php-version:
          - "7.3"
          - "7.4"
          - "8.0"
    defaults:
      run:
        working-directory: php/phpunit
    steps:
      - uses: actions/checkout@v2

      # Could not install memcached on PHP 8.0.0 · Issue #354 · shivammathur/setup-php
      # https://github.com/shivammathur/setup-php/issues/354
      - name: Install libmemcached
        run: sudo apt-get install libmemcached-dev -y

      # https://github.com/shivammathur/setup-php
      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          tools: composer
          extensions: redis, memcached
        env:
          fail-fast: true

      - name: Install dependencies with composer
        run: composer install

      # 実際のクレデンシャル情報を入れないとエラーになるので、このワークフローではコメントアウトする
      # https://github.com/aws-actions/configure-aws-credentials
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     # 暗号化されたシークレット - GitHub Docs
      #     # https://docs.github.com/ja/free-pro-team@latest/actions/reference/encrypted-secrets
      #     aws-access-key-id: ${{ secrets.TEST_AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}
      #     aws-region: ap-northeast-1

      - name: Create tables on DynanoDB local
        # ホストランナーにはAWS CLIがデフォルトでインストールされている
        run: |
          aws dynamodb create-table --endpoint-url http://localhost:8000 --cli-input-json file://dynamodb-local/tables/movies.json

      - name: Run tests with PHPUnit
        run: vendor/bin/phpunit
        # aws-actions/configure-aws-credentials は実際のクレデンシャルじゃないとエラーになるので、
        # ダミーのクレデンシャルを入れるために環境変数に直接入れる
        env:
          AWS_ACCESS_KEY_ID: DUMMY_ACCESS_KEY_ID
          AWS_SECRET_ACCESS_KEY: DUMMY_SECRET_ACCESS_KEY
