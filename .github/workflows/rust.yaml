name: Rust

on: [push, pull_request]

defaults:
  run:
    working-directory: rust

jobs:
  cargo-fmt:
    name: cargo-fmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Get latest version of stable Rust
        run: rustup update stable
      - name: Check formatting with cargo fmt
        run: cargo fmt --all -- --check

  clippy:
    name: clippy
    runs-on: ubuntu-latest
    needs: cargo-fmt
    steps:
      - uses: actions/checkout@v1
      - name: Lint code for quality and style with Clippy
        # #[test] のチェックを行うために `--tests` を指定
        # https://github.com/rust-lang/rust-clippy/issues/1436
        run: >-
          cargo clippy
          --tests
          -p primitives
          -p leetcode
          -- -D warnings
      - name: Certify Cargo.lock freshness
        run: git diff --exit-code Cargo.lock

  tests:
    name: tests
    runs-on: ubuntu-latest
    needs: clippy
    steps:
    - uses: actions/checkout@v1
    - name: Install Protocol Buffer Compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
        protoc --version
    - name: Get latest version of stable Rust
      run: rustup update stable
    - name: Run tests
      run: cargo test --workspace

  # https://github.com/xd009642/tarpaulin#github-actions
  coverage-report:
    name: coverage report
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - uses: actions/checkout@v1
    - name: Get latest version of stable Rust
      run: rustup update stable
    - name: Install Protocol Buffer Compiler
      run: |
        sudo apt-get update
        sudo apt-get install -y protobuf-compiler
        protoc --version
    - name: Install Tarpaulin
      run: cargo install cargo-tarpaulin
    - name: Generate code coverage
      run: cargo tarpaulin --verbose --all-features --workspace

  bench:
    # https://github.com/bheisler/criterion.rs
    name: criterion
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - uses: actions/checkout@v1
    - name: Run benchmark with Criterion
      run: cargo bench --package crate-criterion
