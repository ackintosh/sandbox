service: appsync-sample-with-serverless
provider:
  name: aws
  stage: test
  region: ap-northeast-1

plugins:
  - serverless-dynamodb-local
  - serverless-appsync-plugin
  - serverless-appsync-offline
  - serverless-offline

# プラグイン関連の設定
custom:
  # Offline support
  appsync-offline:
    port: 62222
    dynamodb:
      client:
        endpoint: "http://localhost:8000"
        region: localhost
  dynamodb:
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: true
    stages:
      - test
    seed:
      test:
        sources:
          - table: Users
            sources: [seed-data/generated/Users.json]

  # Serverless-AppSync-Plugin
  # https://github.com/sid88in/serverless-appsync-plugin#configuring-the-plugin
  appSync:
    # エンドポイントの名前を指定します
    name: appsync-serverless-sample
    # AppSyncの認証方法を指定します
    authenticationType: API_KEY
    # ここではCognitoによる認証方法を指定しています
    # Cogtnitoによる認証方法の場合、Cognito側の情報を指定する必要があります
    #userPoolConfig:
    #  # Cognitoが存在するリージョンを指定します
    #  # デフォルトだとproviderのregionで指定した値になります
    #  awsRegion: ap-northeast-1
    #  # CognitoのユーザープールのIDを指定します
    #  userPoolId: ap-northeast-1_U0e7zFRLQ
    #  # スキーマ定義で認証設定が記述されていない場合の挙動を指定します
    #  # DENYを指定すると、認証されたいかなるユーザーも認可エラーに倒します
    #  defaultAction: DENY
    schema: schema.graphql
    # マッピングテンプレートのVTLファイルの格納先
    # デフォルトはmapping-templates
    mappingTemplatesLocation: mapping-templates
    # リゾルバー定義
    # ※ここではPipeline Resolverの例
    mappingTemplates:
      - type: Query
        # リゾルバーを紐づけるスキーマ中のフィールド名を指定します
        field: user
        kind: UNIT # UNIT|PIPELINE (デフォルトはUNIT)
        dataSource: dynamo_db_users
        # リクエストマッピングテンプレートのパス
        # ファイルパスはmappingTemplatesLocationで指定したパスからの相対パス
        request: 'GetUser.req.vtl'
        # レスポンスマッピングテンプレートのパス
        response: 'GetUser.res.vtl'
        # kind == PIPELINEの場合は使用する関数を定義する
        #functions:
        #  - GetUser
    # 関数定義
    #functionConfigurations:
    #    # ユーザー一覧取得
    #    # 関数で扱うデータソース名を指定します
    #  - dataSource: dynamo_user
    #    # 関数名を指定します
    #    name: 'GetUser'
    #    # 関数のリクエストマッピングテンプレートのファイルパスを指定します
    #    # ファイルパスはmappingTemplatesLocationで指定したパスからの相対パスになります
    #    request: 'GetUser.req.vtl'
    #    # 関数のレスポンスマッピングテンプレートのファイルパスを指定します
    #    response: 'GetUser.res.vtl'
    # データソースを指定(複数指定可能)
    dataSources:
      - type: AMAZON_DYNAMODB
        name: dynamo_db_users
        description: 'ユーザー情報テーブル'
        config:
          tableName: { Ref: Users }
          # データソースのロールARN
          serviceRoleArn: arn:aws:iam::999999999999:role/sample_role_arn
          # デフォルトだとproviderのregionで指定した値になる
          region: ap-northeast-1

resources:
  Resources:
    UserTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: N
        ProvisionedThroughput:
          ReadCapacityUnits: 10
          WriteCapacityUnits: 10
        TableName: 'Users'
